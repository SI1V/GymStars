from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton


def build_exercise_keyboard(exercises, page: int, total: int, page_size: int, for_workout: bool = False) -> InlineKeyboardMarkup:
    keyboard = []

    # –°–ø–∏—Å–æ–∫ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π
    for exercise in exercises:
        callback_prefix = "workout_add_exercise_" if for_workout else "exercise_"
        keyboard.append([
            InlineKeyboardButton(
                text=exercise.name,
                callback_data=f"{callback_prefix}{exercise.id}"
            )
        ])

    # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    nav_buttons = []
    if page > 0:
        nav_buttons.append(
            InlineKeyboardButton(
                text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
                callback_data=f"exercises_page_{page - 1}"
            )
        )
    if (page + 1) * page_size < total:
        nav_buttons.append(
            InlineKeyboardButton(
                text="–í–ø–µ—Ä–µ–¥ ‚û°Ô∏è",
                callback_data=f"exercises_page_{page + 1}"
            )
        )

    if nav_buttons:
        keyboard.append(nav_buttons)

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥" –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    keyboard.append([
        InlineKeyboardButton(
            text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —Ç–∏–ø–∞–º",
            callback_data="back_to_types"
        )
    ])

    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def build_exercise_type_keyboard(for_workout: bool = False) -> InlineKeyboardMarkup:
    prefix = "workout_type_" if for_workout else "exercise_type_"
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üèãÔ∏è‚Äç‚ôÇÔ∏è –°–∏–ª–æ–≤—ã–µ", callback_data=f"{prefix}STRENGTH")],
        [InlineKeyboardButton(text="üèÉ‚Äç‚ôÇÔ∏è –ö–∞—Ä–¥–∏–æ", callback_data=f"{prefix}CARDIO")],
        [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–∞—è", callback_data="main_menu")]
    ])


def build_type_keyboard() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üèãÔ∏è‚Äç‚ôÇÔ∏è –°–∏–ª–æ–≤—ã–µ", callback_data="new_type_strength")],
        [InlineKeyboardButton(text="üèÉ‚Äç‚ôÇÔ∏è –ö–∞—Ä–¥–∏–æ", callback_data="new_type_cardio")],
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_create_exercise")],
    ])


def build_exercise_action_keyboard(exercise_id: int, exercise_type: str = None, is_default: bool = False) -> InlineKeyboardMarkup:
    keyboard = []

    # –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ –ù–ï –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —É–¥–∞–ª–µ–Ω–∏–µ
    if not is_default:
        keyboard.append([
            InlineKeyboardButton(text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data=f"edit_exercise_{exercise_id}"),
            InlineKeyboardButton(text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å", callback_data=f"delete_exercise_{exercise_id}")
        ])

    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" ‚Äî –ª–∏–±–æ –∫ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è–º –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞, –ª–∏–±–æ –∫–æ –≤—Å–µ–º —Ç–∏–ø–∞–º
    if exercise_type:
        keyboard.append([InlineKeyboardButton(
            text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è–º",
            callback_data=f"back_to_exercises_{exercise_type}"
        )])
    else:
        keyboard.append([InlineKeyboardButton(
            text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è–º",
            callback_data="back_to_types"
        )])

    # –ö–Ω–æ–ø–∫–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    keyboard.append([InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–∞—è", callback_data="main_menu")])

    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def build_delete_confirmation_keyboard(exercise_type: str) -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="confirm_delete"),
            InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_delete")
        ],
        [
            InlineKeyboardButton(
                text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è–º",
                callback_data=f"back_to_exercises_{exercise_type}"
            )
        ]
    ])
